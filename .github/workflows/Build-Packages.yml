name: Build IPK Packages

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Name of the plugin(s) to compile (separate multiple with spaces)'
        required: true
        default: 'atinout internet-detector-mod-email internet-detector-mod-modem-restart internet-detector luci-app-3ginfo-lite luci-app-atcommands luci-app-atinout-mod luci-app-internet-detector luci-app-modem luci-app-modemband luci-app-modeminfo modemband modeminfo quectel-CM-5G sms-tool telegrambot
'

permissions: 
  contents: write
  packages: read
  issues: read
  pull-requests: read

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@main

    - name: Initialize Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /etc/mysql /etc/php /opt/ghc /usr/local/lib/android 2>/dev/null
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo -E apt-get -y install rename time gn
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        sudo rm -rf /workdir
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th

    - name: Clone OpenWRT Source
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Add Custom Feeds
      run: |
        cd openwrt
        echo "src-git symwrt https://github.com/aNzTikTok/symwrt" >> feeds.conf.default
        cat feeds.conf.default

    - name: Update and Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        for pkg in ${{ github.event.inputs.package_name }}; do
          if [ -d "package/feeds/symwrt/$pkg" ]; then
            echo "✓ $pkg found (symwrt)"
          elif [ -d "package/feeds/packages/$pkg" ]; then
            echo "✓ $pkg found (packages)"
          else
            echo "⚠️ Warning: $pkg not found"
          fi
        done

    - name: Fix Package Versions
      run: |
        cd openwrt
        if [ -f "feeds/small/lua-neturl/Makefile" ]; then
          sed -i 's/PKG_RELEASE:=.*/PKG_RELEASE:=1/' feeds/small/lua-neturl/Makefile
        fi
        if [ -f "feeds/small/naiveproxy/Makefile" ]; then
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip ninja-build nodejs
          python3 -m pip install urllib3==1.26.15
        fi

    - name: Generate Minimal Config
      run: |
        cd openwrt
        cat > .config <<EOF
        CONFIG_MODULES=y
        CONFIG_HAVE_DOT_CONFIG=y
        CONFIG_TARGET_qualcommax=y
        CONFIG_TARGET_qualcommax_ipq807x=y
        CONFIG_TARGET_qualcommax_ipq807x_DEVICE_arcadyan_aw1000=y
        CONFIG_HAS_SUBTARGETS=y
        CONFIG_HAS_DEVICES=y
        CONFIG_TARGET_BOARD="qualcommax"
        CONFIG_TARGET_SUBTARGET="ipq807x"
        CONFIG_TARGET_PROFILE="DEVICE_arcadyan_aw1000"
        CONFIG_TARGET_ARCH_PACKAGES="aarch64_cortex-a53"
        CONFIG_DEFAULT_TARGET_OPTIMIZATION="-Os -pipe -mcpu=cortex-a53"
        CONFIG_CPU_TYPE="cortex-a53"
        CONFIG_SDK=y
        CONFIG_MAKE_TOOLCHAIN=y
        EOF
        for pkg in ${{ github.event.inputs.package_name }}; do
          echo "CONFIG_PACKAGE_$pkg=y" >> .config
        done
        make defconfig

    - name: Download Sources
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec rm -f {} \;

    - name: Build Packages
      id: compile
      run: |
        cd openwrt
        make defconfig
        make tools/compile -j$(nproc) || make tools/compile -j1 V=s
        make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
        make target/compile -j$(nproc) || make target/compile -j1 V=s
        make package/libs/toolchain/compile -j$(nproc) || make package/libs/toolchain/compile -j1 V=s

        for pkg in ${{ github.event.inputs.package_name }}; do
          if [ -d "package/feeds/symwrt/$pkg" ]; then
            pkg_path="package/feeds/symwrt/$pkg"
          elif [ -d "package/feeds/packages/$pkg" ]; then
            pkg_path="package/feeds/packages/$pkg"
          elif [ -d "package/feeds/small/$pkg" ]; then
            pkg_path="package/feeds/small/$pkg"
          else
            pkg_path=$(find package/feeds -name "$pkg" -type d | head -n 1)
            [ -z "$pkg_path" ] && pkg_path="package/$pkg"
          fi

          ./scripts/feeds uninstall $pkg || true
          ./scripts/feeds install $pkg || true
          echo "CONFIG_PACKAGE_$pkg=y" >> .config
          make defconfig
          make $pkg_path/compile IGNORE_ERRORS=1 -j$(nproc) V=s || \
          make $pkg_path/compile IGNORE_ERRORS=1 -j1 V=s || \
          echo "Failed to compile $pkg"
        done
